package com.javassem.controller;

import java.util.Date;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.javassem.dao.MemberDAO;
import com.javassem.domain.MemberVO;
import com.javassem.service.MemberService;

@Controller
@RequestMapping("user")
public class MemberController {
	
	@Autowired
	private MemberService memberService;
	
	@RequestMapping("{url}.do")
	public String userJoin(@PathVariable String url) {
		System.out.println("확인");
		return "/user/"+url;
	}
	
	/*
	 * 	요청 : /user/userInsert.do
	 * 	뷰페이지 : /user/userJoin_ok.jsp
	 */
	@RequestMapping("userInsert.do")
	public ModelAndView userInsert(MemberVO memberVO) {
		System.out.println(memberVO.getUserName());
		
		int result = memberService.userInsert(memberVO);
		String message = "가입되지 않았습니다.";
		if(result==1) message = memberVO.getUserName() + "님 가입을 축하합니다.";
		
		ModelAndView mv = new ModelAndView();
		mv.setViewName("/user/userJoin_ok");
		mv.addObject("message", message);
		return mv;
	}
	
	@RequestMapping("login.do")
	// **************************************
	// 세션 사용 -> 인자에 HttpSession 변수 선언
	public String login(MemberVO memberVO, HttpSession session) {
		System.out.println("login 확인");
		MemberVO result = memberService.idCheck_Login(memberVO);
		if(result== null || result.getUserId() == null){
			return "/user/userLogin";
		}else {
			// 로그인 성공 <고객이 로그인한경우 로그인한 정보를 저장해야함 (세션)>
			// 세션에 저장
			session.setAttribute("login", memberVO.getUserId());
			return "/user/login_ok";
		}
		
	}
	
	@RequestMapping("idCheck.do")
	// ***************************************
	//  일반요청함수에서 String 리턴 : 뷰페이지 지정
	// 	이 요청에tjs Ajax 통신에 의해 값을 전송해야 함
	//	값을 넘겨 받기위해 @ResponseBody 사용
	@ResponseBody
	public String checkId(MemberVO memberVO) {
		
		System.out.println("idCheck.do 요청 : "+memberVO.getUserId());
		MemberVO result = memberService.idCheck_Login(memberVO);
		String message = "사용가능한 아이디입니다.";
		if(result != null) message = "중복된 아이디가 있습니다.";
		
		System.out.println("message : " + message);
		
		return message;
	}

	
}
